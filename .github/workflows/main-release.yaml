on:
  push:
    paths:
      - 'dialob-*/**'
      - 'pom.xml'
      - '!docs/**'
      - '!frontend/**'
      - '!utils/**'
      - '!**/*.md'
      - '!compose/**'
      - '!dev-env/**'
      - '!api/**'
    branches:
      - main

permissions:
  contents: write
  id-token: write

name: main - release
jobs:
  build:
    name: Releasing branch - main
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - linux/amd64
#          - linux/arm64
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.ref }}
        fetch-depth: 0

    - uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '21'
        gpg-private-key: ${{ secrets.DIALOB_GPG_KEY }}
        gpg-passphrase: DIALOB_GPG_SEC
        server-id: oss.sonatype.org
        server-username: OSSRH_USER
        server-password: OSSRH_PASS

    - name: Cache SonarQube packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Docker Hub login
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: tag - release - upload
      run: ./dialob-build-parent/release.sh
      env:
        BOT_NAME: "info"
        BOT_EMAIL: "info@dialob.io"
        DOCKER_REGISTRY: docker.io/resys
        DIALOB_GPG_SEC: ${{ secrets.DIALOB_GPG_SEC }}
        OSSRH_USER: ${{ secrets.OSSRH_USER }}
        OSSRH_PASS: ${{ secrets.OSSRH_PASS }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: upload image metadata
      uses: actions/upload-artifact@v4
      with:
        name: jib-image
        path: '**/target/jib-image.*'
