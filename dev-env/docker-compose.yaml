services:
  nginx:
    image: nginx
    ports:
      - "8080:8080"
    configs:
      - source: nginx_config
        target: /etc/nginx/conf.d/default.conf
    depends_on:
      - dialob-api
      - dialob-session
    links:
      - dialob-api:dialob-api
      - dialob-session:dialob-session
    networks:
      - application

  dialob-api:
    # image: resys/dialob-boot:2.1.19
    build:
      context: ../dialob-boot
      dockerfile: Dockerfile
      args:
        RELEASE_VERSION: 999-SNAPSHOT
    ports:
      - "8085:8081"
      - "5085:5085"
    env_file:
      - .env
      - .env.db
      - .env.api
    environment:
      JAVA_OPTS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5085"
    volumes:
      - ./dialob-boot-config:/java/config/
    networks:
      - application
      - backend
    healthcheck:
      test: "curl -f http://localhost:8081/dialob/manage/health || exit 1"
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    links:
      - postgresql:postgresql
      - redis:redis
    depends_on:
      - postgresql

  dialob-session:
    # image: resys/dialob-session-boot:2.1.19
    build:
      context: ../dialob-session-boot
      dockerfile: Dockerfile
      args:
        RELEASE_VERSION: 999-SNAPSHOT
    environment:
      JAVA_OPTS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5084"
    healthcheck:
      test: "curl -f http://localhost:8080/dialob/manage/health || exit 1"
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    env_file:
      - .env
      - .env.db
      - .env.session
    ports:
      - "8084:8080"
      - "5084:5084"
    volumes:
      - ./dialob-session-config:/java/config/
    links:
      - postgresql:postgresql
      - redis:redis
    networks:
      - application
      - backend
    depends_on:
      - postgresql

  postgresql:
    image: postgres:latest
    restart: always
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD=password123
      - POSTGRES_USER=dbuser
      - TZ=Europe/Helsinki
    volumes:
      - ./db_init/postgresql:/docker-entrypoint-initdb.d
      - postgresql-data:/var/lib/postgresql/data:rw
    networks:
      - backend

  redis:
      image: redis:7
      restart: always
      ports:
        - "6379:6379"
      networks:
        - backend


configs:
  nginx_config:
    file: ./nginx.conf


volumes:
  postgresql-data:

networks:
  backend:
  application:

